#!/usr/bin/env python
import matplotlib.pyplot as plt
import h5py as h5
import numpy as np
import sys
import os
if len(sys.argv) < 2:
	print("you have to provide a filename")
	sys.exit(1)


filenames = []
path = ""
if sys.argv[1].lower().endswith('.txt'):
    path = os.path.dirname(os.path.abspath(sys.argv[1]))
    with open(sys.argv[1]) as f:
        filenames = f.readlines()
elif sys.argv[1].lower().endswith('.h5'):
    filenames.append(sys.argv[1])
else:
    print("no valid file given")
    sys.exit(1)
for file in filenames:
    if not path == "":
        sys.argv[1] = (path+"/"+file).strip()
    else:
        sys.argv[1] = file


    fileName = sys.argv[1]
    f = h5.File(fileName)
    print(fileName)
    h5farmTimes = f['BVD_Farm_Times']
    fileTimes = h5farmTimes[:].astype(int)

    if not 'globR' in globals():
        globR = []
        globS = []
        globTI = []
        globPI = []
        globSum = []
        globs = []
        globti = []
        globpi = []
        globr = []
        farmTimes = []
    for time in fileTimes:
        farmTimes.append(time)
        dataSetName = "Farms_t" + str(time)
        h5Matrix = f[dataSetName]
        intMatrix = h5Matrix[:,:].astype(int)
        #print(intMatrix[0,1])
        globSCurr = 0
        globTICurr = 0
        globPICurr = 0
        globRCurr = 0
        globSumCurr = 0

        for i in range(0,len(intMatrix[:])):# for farm i
            globSCurr += intMatrix[i,1,0,0].astype(int)
            globTICurr += intMatrix[i,2,0,0].astype(int)
            globPICurr += intMatrix[i,3,0,0].astype(int)
            globRCurr += intMatrix[i,4,0,0].astype(int)

        globSumCurr = globSCurr + globTICurr + globPICurr + globRCurr
        
        globR.append(globRCurr)
        globS.append(globSCurr)
        globTI.append(globTICurr)
        globPI.append(globPICurr)
        globSum.append(globSumCurr)

        globr.append(float(globRCurr)/float(globSumCurr))
        globs.append(float(globSCurr)/float(globSumCurr))
        globti.append(float(globTICurr)/float(globSumCurr))
        globpi.append(float(globPICurr)/float(globSumCurr))


plt.figure(1)

plt.plot(farmTimes, globs, label='S')
plt.plot(farmTimes, globti, label='TI')
plt.plot(farmTimes, globpi, label='PI')
plt.plot(farmTimes, globr, label='R')
plt.title('Global Endemic Behaviour')
plt.ylabel('fraction of each infection state')
plt.xlabel('time in days')
#plt.plot(farmTimes, globSum, label='Sum')
plt.legend()


plt.figure(2)
plt.plot(farmTimes, globS, label='S')
plt.plot(farmTimes, globTI, label='TI')
plt.plot(farmTimes, globPI, label='PI')
plt.plot(farmTimes, globR, label='R')
plt.plot(farmTimes, globSum, label='Sum')
plt.ylabel('absolute number of cows for each infection state')
plt.xlabel('time in days')
plt.legend()
plt.show()
